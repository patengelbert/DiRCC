# -------------------------------------------------------------------------- #
#
# Copyright (C) 2016  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel MegaCore Function License Agreement, or other 
# applicable license agreement, including, without limitation, 
# that your use is for the sole purpose of programming logic 
# devices manufactured by Intel and sold by Intel or its 
# authorized distributors.  Please refer to the applicable 
# agreement for further details.
#
# -------------------------------------------------------------------------- #
#
# Quartus Prime
# Version 16.1.0 Build 196 10/24/2016 SJ Lite Edition
# Date created = 14:50:15  January 06, 2017
#
# -------------------------------------------------------------------------- #
#
# Notes:
#
# 1) The default values for assignments are stored in the file:
#		DIRCC_assignment_defaults.qdf
#    If this file doesn't exist, see file:
#		assignment_defaults.qdf
#
# 2) Altera recommends that you do not modify this file. This
#    file is updated automatically by the Quartus Prime software
#    and any changes you make may be lost or overwritten.
#
# -------------------------------------------------------------------------- #



# Project-Wide Assignments
# ========================
set_global_assignment -name ORIGINAL_QUARTUS_VERSION 16.1.0
set_global_assignment -name PROJECT_CREATION_TIME_DATE "13:27:06  JANUARY 06, 2017"
set_global_assignment -name LAST_QUARTUS_VERSION "16.1.0 Lite Edition"
set_global_assignment -name PROJECT_OUTPUT_DIRECTORY ../build

# Pin & Location Assignments
# ==========================
set_location_assignment PIN_AF14 -to clk_clk
set_location_assignment PIN_AA14 -to reset_reset_n

# Classic Timing Assignments
# ==========================
set_global_assignment -name MIN_CORE_JUNCTION_TEMP 0
set_global_assignment -name MAX_CORE_JUNCTION_TEMP 85
set_global_assignment -name TIMEQUEST_MULTICORNER_ANALYSIS ON
set_global_assignment -name TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS OFF

# Analysis & Synthesis Assignments
# ================================
set_global_assignment -name FAMILY "Cyclone V"
set_global_assignment -name TOP_LEVEL_ENTITY dircc_system_node_single

# Fitter Assignments
# ==================
set_global_assignment -name DEVICE 5CSEMA5F31C6
set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 256

# EDA Netlist Writer Assignments
# ==============================
set_global_assignment -name EDA_SIMULATION_TOOL "ModelSim-Altera (Verilog)"

# Power Estimation Assignments
# ============================
set_global_assignment -name POWER_PRESET_COOLING_SOLUTION "23 MM HEAT SINK WITH 200 LFPM AIRFLOW"
set_global_assignment -name POWER_BOARD_THERMAL_MODEL "NONE (CONSERVATIVE)"

# start EDA_TOOL_SETTINGS(eda_simulation)
# ---------------------------------------

	# Analysis & Synthesis Assignments
	# ================================
	set_global_assignment -name EDA_RUN_TOOL_AUTOMATICALLY OFF -section_id eda_simulation

	# EDA Netlist Writer Assignments
	# ==============================
set_global_assignment -name EDA_TIME_SCALE "1 ps" -section_id eda_simulation
set_global_assignment -name EDA_OUTPUT_DATA_FORMAT "VERILOG HDL" -section_id eda_simulation

# end EDA_TOOL_SETTINGS(eda_simulation)
# -------------------------------------

# -----------------------------------
# start ENTITY(altera_avalon_sc_fifo)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_avalon_sc_fifo)
# ---------------------------------

# ----------------------------------------
# start ENTITY(altera_merlin_master_agent)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_merlin_master_agent)
# --------------------------------------

# ---------------------------------------------
# start ENTITY(altera_merlin_master_translator)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_merlin_master_translator)
# -------------------------------------------

# ---------------------------------------
# start ENTITY(altera_merlin_slave_agent)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_merlin_slave_agent)
# -------------------------------------

# --------------------------------------------
# start ENTITY(altera_merlin_slave_translator)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_merlin_slave_translator)
# ------------------------------------------

# -------------------------------------
# start ENTITY(altera_reset_controller)

	# Project-Wide Assignments
	# ========================

# end ENTITY(altera_reset_controller)
# -----------------------------------

# --------------------------
# start ENTITY(poets_system)

	# Project-Wide Assignments
	# ========================

	# SignalTap II Assignments
	# ========================

	# start DESIGN_PARTITION(Top)
	# ---------------------------

		# Incremental Compilation Assignments
		# ===================================

	# end DESIGN_PARTITION(Top)
	# -------------------------

# end ENTITY(poets_system)
# ------------------------

# ------------------------------
# start ENTITY(poets_system_cpu)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_cpu)
# ----------------------------

# ----------------------------------
# start ENTITY(poets_system_cpu_cpu)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_cpu_cpu)
# --------------------------------

# -------------------------------------
# start ENTITY(poets_system_irq_mapper)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_irq_mapper)
# -----------------------------------

# ------------------------------------
# start ENTITY(poets_system_jtag_uart)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_jtag_uart)
# ----------------------------------

# ------------------------------
# start ENTITY(poets_system_mem)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mem)
# ----------------------------

# --------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0)
# ------------------------------------------

# --------------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_avalon_st_adapter)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_avalon_st_adapter)
# ------------------------------------------------------------

# ------------------------------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_avalon_st_adapter_error_adapter_0)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_avalon_st_adapter_error_adapter_0)
# ----------------------------------------------------------------------------

# ------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_cmd_demux)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_cmd_demux)
# ----------------------------------------------------

# ----------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_cmd_demux_001)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_cmd_demux_001)
# --------------------------------------------------------

# ----------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_cmd_mux)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_cmd_mux)
# --------------------------------------------------

# --------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_cmd_mux_002)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_cmd_mux_002)
# ------------------------------------------------------

# ---------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_router)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_router)
# -------------------------------------------------

# -------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_router_001)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_router_001)
# -----------------------------------------------------

# -------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_router_002)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_router_002)
# -----------------------------------------------------

# -------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_router_004)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_router_004)
# -----------------------------------------------------

# ------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_rsp_demux)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_rsp_demux)
# ----------------------------------------------------

# ----------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_rsp_mux)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_rsp_mux)
# --------------------------------------------------

# --------------------------------------------------------
# start ENTITY(poets_system_mm_interconnect_0_rsp_mux_001)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_mm_interconnect_0_rsp_mux_001)
# ------------------------------------------------------

# --------------------------------
# start ENTITY(poets_system_sysid)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_sysid)
# ------------------------------

# --------------------------------
# start ENTITY(poets_system_timer)

	# Project-Wide Assignments
	# ========================

# end ENTITY(poets_system_timer)
# ------------------------------
set_global_assignment -name ENABLE_SIGNALTAP ON
set_global_assignment -name USE_SIGNALTAP_FILE ../build/stp1.stp
set_global_assignment -name EDA_TEST_BENCH_ENABLE_STATUS TEST_BENCH_MODE -section_id eda_simulation
set_global_assignment -name EDA_NATIVELINK_SIMULATION_TEST_BENCH DIRCC_router_test -section_id eda_simulation
set_global_assignment -name EDA_TEST_BENCH_NAME DIRCC_router_test -section_id eda_simulation
set_global_assignment -name EDA_DESIGN_INSTANCE_NAME NA -section_id DIRCC_router_test
set_global_assignment -name EDA_TEST_BENCH_MODULE_NAME DIRCC_router_test -section_id DIRCC_router_test
set_global_assignment -name EDA_TEST_BENCH_FILE dircc_router/simulation/top.sv -section_id DIRCC_router_test
set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top
set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top
set_global_assignment -name PARTITION_COLOR 16764057 -section_id Top
set_global_assignment -name OPTIMIZATION_MODE "AGGRESSIVE AREA"
set_global_assignment -name QSYS_FILE dircc_system_node_single.qsys
set_global_assignment -name QSYS_FILE dircc_system_nios_single.qsys
set_global_assignment -name CDF_FILE ../build/build_chain.cdf
set_global_assignment -name ENABLE_DRC_SETTINGS OFF
set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -section_id Top