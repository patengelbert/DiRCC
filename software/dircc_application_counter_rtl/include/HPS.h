#ifndef _ALTERA_HPS_H_
#define _ALTERA_HPS_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'dircc_system_rtl_counter' in
 * file '../../../fpga/dircc_system_rtl_counter.sopcinfo'.
 */

/*
 * This file contains macros for module 'HPS' and devices
 * connected to the following master:
 *   h2f_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'node_65537_dircc_processing_counter', class 'dircc_processing_counter'
 * The macros are prefixed with 'NODE_65537_DIRCC_PROCESSING_COUNTER_'.
 * The prefix is the slave descriptor.
 */
#define NODE_65537_DIRCC_PROCESSING_COUNTER_COMPONENT_TYPE dircc_processing_counter
#define NODE_65537_DIRCC_PROCESSING_COUNTER_COMPONENT_NAME node_65537_dircc_processing_counter
#define NODE_65537_DIRCC_PROCESSING_COUNTER_BASE 0x0
#define NODE_65537_DIRCC_PROCESSING_COUNTER_SPAN 32768
#define NODE_65537_DIRCC_PROCESSING_COUNTER_END 0x7fff

/*
 * Macros for device 'node_65536_dircc_processing_counter', class 'dircc_processing_counter'
 * The macros are prefixed with 'NODE_65536_DIRCC_PROCESSING_COUNTER_'.
 * The prefix is the slave descriptor.
 */
#define NODE_65536_DIRCC_PROCESSING_COUNTER_COMPONENT_TYPE dircc_processing_counter
#define NODE_65536_DIRCC_PROCESSING_COUNTER_COMPONENT_NAME node_65536_dircc_processing_counter
#define NODE_65536_DIRCC_PROCESSING_COUNTER_BASE 0x10000
#define NODE_65536_DIRCC_PROCESSING_COUNTER_SPAN 32768
#define NODE_65536_DIRCC_PROCESSING_COUNTER_END 0x17fff

/*
 * Macros for device 'node_1_dircc_processing_counter', class 'dircc_processing_counter'
 * The macros are prefixed with 'NODE_1_DIRCC_PROCESSING_COUNTER_'.
 * The prefix is the slave descriptor.
 */
#define NODE_1_DIRCC_PROCESSING_COUNTER_COMPONENT_TYPE dircc_processing_counter
#define NODE_1_DIRCC_PROCESSING_COUNTER_COMPONENT_NAME node_1_dircc_processing_counter
#define NODE_1_DIRCC_PROCESSING_COUNTER_BASE 0x20000
#define NODE_1_DIRCC_PROCESSING_COUNTER_SPAN 32768
#define NODE_1_DIRCC_PROCESSING_COUNTER_END 0x27fff

/*
 * Macros for device 'node_0_dircc_processing_counter', class 'dircc_processing_counter'
 * The macros are prefixed with 'NODE_0_DIRCC_PROCESSING_COUNTER_'.
 * The prefix is the slave descriptor.
 */
#define NODE_0_DIRCC_PROCESSING_COUNTER_COMPONENT_TYPE dircc_processing_counter
#define NODE_0_DIRCC_PROCESSING_COUNTER_COMPONENT_NAME node_0_dircc_processing_counter
#define NODE_0_DIRCC_PROCESSING_COUNTER_BASE 0x30000
#define NODE_0_DIRCC_PROCESSING_COUNTER_SPAN 32768
#define NODE_0_DIRCC_PROCESSING_COUNTER_END 0x37fff

/*
 * Macros for device 'terminal_west_1', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_WEST_1_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_WEST_1_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_WEST_1_COMPONENT_NAME terminal_west_1
#define TERMINAL_WEST_1_BASE 0x40000
#define TERMINAL_WEST_1_SPAN 2
#define TERMINAL_WEST_1_END 0x40001

/*
 * Macros for device 'terminal_east_0', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_EAST_0_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_EAST_0_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_EAST_0_COMPONENT_NAME terminal_east_0
#define TERMINAL_EAST_0_BASE 0x40008
#define TERMINAL_EAST_0_SPAN 2
#define TERMINAL_EAST_0_END 0x40009

/*
 * Macros for device 'terminal_east_1', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_EAST_1_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_EAST_1_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_EAST_1_COMPONENT_NAME terminal_east_1
#define TERMINAL_EAST_1_BASE 0x40010
#define TERMINAL_EAST_1_SPAN 2
#define TERMINAL_EAST_1_END 0x40011

/*
 * Macros for device 'terminal_west_0', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_WEST_0_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_WEST_0_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_WEST_0_COMPONENT_NAME terminal_west_0
#define TERMINAL_WEST_0_BASE 0x40018
#define TERMINAL_WEST_0_SPAN 2
#define TERMINAL_WEST_0_END 0x40019

/*
 * Macros for device 'terminal_south_1', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_SOUTH_1_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_SOUTH_1_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_SOUTH_1_COMPONENT_NAME terminal_south_1
#define TERMINAL_SOUTH_1_BASE 0x40020
#define TERMINAL_SOUTH_1_SPAN 2
#define TERMINAL_SOUTH_1_END 0x40021

/*
 * Macros for device 'terminal_south_0', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_SOUTH_0_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_SOUTH_0_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_SOUTH_0_COMPONENT_NAME terminal_south_0
#define TERMINAL_SOUTH_0_BASE 0x40028
#define TERMINAL_SOUTH_0_SPAN 2
#define TERMINAL_SOUTH_0_END 0x40029

/*
 * Macros for device 'terminal_north_1', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_NORTH_1_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_NORTH_1_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_NORTH_1_COMPONENT_NAME terminal_north_1
#define TERMINAL_NORTH_1_BASE 0x40030
#define TERMINAL_NORTH_1_SPAN 2
#define TERMINAL_NORTH_1_END 0x40031

/*
 * Macros for device 'terminal_north_0', class 'dircc_avalon_st_terminal'
 * The macros are prefixed with 'TERMINAL_NORTH_0_'.
 * The prefix is the slave descriptor.
 */
#define TERMINAL_NORTH_0_COMPONENT_TYPE dircc_avalon_st_terminal
#define TERMINAL_NORTH_0_COMPONENT_NAME terminal_north_0
#define TERMINAL_NORTH_0_BASE 0x40038
#define TERMINAL_NORTH_0_SPAN 2
#define TERMINAL_NORTH_0_END 0x40039


#endif /* _ALTERA_HPS_H_ */
